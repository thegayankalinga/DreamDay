@model DreamDay.ViewModels.Messages.ThreadDetailViewModel

@{
    ViewData["Title"] = $"Thread: {Model.Subject}";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">@Model.Subject</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Dashboard</a></li>
        <li class="breadcrumb-item"><a asp-action="Index">Messages</a></li>
        <li class="breadcrumb-item active">Thread</li>
    </ol>

    <div class="card mb-4">
        <div class="card-header">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <i class="fas fa-comment me-1"></i>
                    Conversation with @Model.OtherPersonName (@Model.OtherPersonRole)
                </div>
                <form asp-action="Archive" asp-route-id="@Model.ThreadId" method="post" onsubmit="return confirm('Are you sure you want to archive this thread?');">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-outline-secondary btn-sm">
                        <i class="fas fa-archive me-1"></i> Archive
                    </button>
                </form>
            </div>
        </div>
        <div class="card-body">
            <div class="message-container mb-4">
                @if (!Model.Messages.Any())
                {
                    <div class="alert alert-info">
                        <p class="mb-0">This conversation has no messages yet. Start by sending a message below.</p>
                    </div>
                }
                else
                {
                    <div class="messages">
                        @foreach (var message in Model.Messages)
                        {
                            <div class="message @(message.IsFromCurrentUser ? "message-sent" : "message-received")">
                                <div class="message-header">
                                    <strong>@message.SenderName</strong>
                                    <small class="text-muted">@message.CreatedAt.ToString("MMM dd, yyyy h:mm tt")</small>
                                </div>
                                <div class="message-body">
                                    @message.Content
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>

            <div class="reply-form mt-4">
                <form asp-action="Reply" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" asp-for="ThreadId" />
                    <div class="mb-3">
                        <label asp-for="NewMessageContent" class="form-label">Reply</label>
                        <textarea asp-for="NewMessageContent" class="form-control" rows="3" required></textarea>
                        <span asp-validation-for="NewMessageContent" class="text-danger"></span>
                    </div>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-paper-plane me-1"></i> Send
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .message-container {
        max-height: 500px;
        overflow-y: auto;
        border: 1px solid #dee2e6;
        border-radius: 0.375rem;
        background-color: #f8f9fa;
        padding: 1rem;
    }

    .messages {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .message {
        padding: 10px 15px;
        border-radius: 10px;
        max-width: 75%;
        position: relative;
        box-shadow: 0 1px 2px rgba(0,0,0,0.1);
    }

    .message-sent {
        background-color: #dcf8c6;
        align-self: flex-end;
        border-bottom-right-radius: 0;
    }

    .message-sent:after {
        content: "";
        position: absolute;
        bottom: 0;
        right: -10px;
        width: 10px;
        height: 20px;
        background-color: #dcf8c6;
        clip-path: polygon(0 0, 0% 100%, 100% 100%);
    }

    .message-received {
        background-color: #ffffff;
        align-self: flex-start;
        border-bottom-left-radius: 0;
    }

    .message-received:after {
        content: "";
        position: absolute;
        bottom: 0;
        left: -10px;
        width: 10px;
        height: 20px;
        background-color: #ffffff;
        clip-path: polygon(100% 0, 0% 100%, 100% 100%);
    }

    .message-header {
        display: flex;
        justify-content: space-between;
        font-size: 0.85rem;
        margin-bottom: 5px;
    }

    .message-body {
        white-space: pre-wrap;
        word-break: break-word;
    }

    .reply-form {
        background-color: #fff;
        padding: 15px;
        border-radius: 0.375rem;
        border: 1px solid #dee2e6;
    }
</style>

@section Scripts {
    <script>
        // Auto-scroll to the bottom of the message container on page load
        $(document).ready(function() {
            var messageContainer = document.querySelector('.message-container');
            if (messageContainer) {
                messageContainer.scrollTop = messageContainer.scrollHeight;
            }
        });
    </script>
}