@model DreamDay.ViewModels.Planner.PlannerDashboardViewModel
@{
    Layout = "_Dashboard";
    ViewData["Title"] = "Planner Dashboard";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Welcome, @Model.PlannerName!</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Dashboard</a></li>
        <li class="breadcrumb-item active">Planner Dashboard</li>
    </ol>

    <!-- Quick Stats Cards -->
    <div class="row mb-4">
        <div class="col-xl-4 col-md-4">
            <div class="card bg-primary text-white mb-4">
                <div class="card-body">
                    <div class="d-flex align-items-center justify-content-between">
                        <div>
                            <h5 class="mb-0">Total Weddings</h5>
                            <h2 class="mb-0">@Model.TotalWeddingsCount</h2>
                        </div>
                        <div class="icon-circle bg-primary-light">
                            <i class="fas fa-calendar-day fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-4 col-md-4">
            <div class="card bg-success text-white mb-4">
                <div class="card-body">
                    <div class="d-flex align-items-center justify-content-between">
                        <div>
                            <h5 class="mb-0">Upcoming</h5>
                            <h2 class="mb-0">@Model.UpcomingWeddingsCount</h2>
                        </div>
                        <div class="icon-circle bg-success-light">
                            <i class="fas fa-hourglass-start fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-4 col-md-4">
            <div class="card bg-info text-white mb-4">
                <div class="card-body">
                    <div class="d-flex align-items-center justify-content-between">
                        <div>
                            <h5 class="mb-0">Completed</h5>
                            <h2 class="mb-0">@Model.PastWeddingsCount</h2>
                        </div>
                        <div class="icon-circle bg-info-light">
                            <i class="fas fa-check-circle fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Assigned Weddings Section -->
        <div class="col-lg-8">
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <div>
                        <i class="fas fa-heart me-1"></i>
                        Assigned Weddings
                    </div>
                    <div class="d-flex">
                        <div class="input-group input-group-sm me-2" style="width: 200px;">
                            <input type="text" class="form-control" placeholder="Search weddings..." id="weddingSearch">
                            <button class="btn btn-outline-secondary" type="button">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                        <select class="form-select form-select-sm" id="weddingSort" style="width: 150px;">
                            <option value="date-asc">Date (Ascending)</option>
                            <option value="date-desc">Date (Descending)</option>
                            <option value="status">By Status</option>
                            <option value="progress">By Progress</option>
                        </select>
                    </div>
                </div>
                <div class="card-body">
                    @if (!Model.AssignedWeddings.Any())
                    {
                        <div class="alert alert-info">
                            <p class="mb-0">You don't have any assigned weddings yet.</p>
                        </div>
                    }
                    else
                    {
                        <div class="wedding-list">
                            @foreach (var wedding in Model.AssignedWeddings)
                            {
                                <partial name="_WeddingCard" model="wedding" />
                            }
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Recent Activity Section -->
        <div class="col-lg-4">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-history me-1"></i>
                    Recent Activity
                </div>
                <div class="card-body">
                    @if (!Model.RecentActivities.Any())
                    {
                        <div class="alert alert-info">
                            <p class="mb-0">No recent activities.</p>
                        </div>
                    }
                    else
                    {
                        <div class="activity-timeline">
                            @foreach (var activity in Model.RecentActivities)
                            {
                                <div class="activity-item">
                                    <div class="activity-content">
                                        <div class="activity-header d-flex justify-content-between">
                                            <span class="activity-title">
                                                @activity.CoupleName
                                            </span>
                                            <span class="activity-time">
                                                @GetTimeAgo(activity.ActivityTime)
                                            </span>
                                        </div>
                                        <div class="activity-body">
                                            <div class="activity-icon @GetActivityIconClass(activity.ActivityType)">
                                                <i class="@GetActivityIcon(activity.ActivityType)"></i>
                                            </div>
                                            <div class="activity-description">
                                                @activity.Description
                                            </div>
                                        </div>
                                        <div class="activity-footer">
                                            <a asp-controller="Planner" asp-action="WeddingDetails" asp-route-id="@activity.CoupleProfileId" class="btn btn-sm btn-outline-primary">
                                                View Wedding
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetTimeAgo(DateTime time)
    {
        var timeSpan = DateTime.Now - time;

        if (timeSpan.TotalMinutes < 1)
            return "Just now";
        if (timeSpan.TotalMinutes < 60)
            return $"{(int)timeSpan.TotalMinutes} minute{((int)timeSpan.TotalMinutes == 1 ? "" : "s")} ago";
        if (timeSpan.TotalHours < 24)
            return $"{(int)timeSpan.TotalHours} hour{((int)timeSpan.TotalHours == 1 ? "" : "s")} ago";
        if (timeSpan.TotalDays < 7)
            return $"{(int)timeSpan.TotalDays} day{((int)timeSpan.TotalDays == 1 ? "" : "s")} ago";
        
        return time.ToString("MMM dd, yyyy");
    }

    public string GetActivityIcon(string activityType)
    {
        return activityType switch
        {
            "Message" => "fas fa-envelope",
            "Checklist" => "fas fa-tasks",
            "Guest" => "fas fa-user-friends",
            "Budget" => "fas fa-money-bill",
            "Venue" => "fas fa-map-marker-alt",
            _ => "fas fa-bell"
        };
    }

    public string GetActivityIconClass(string activityType)
    {
        return activityType switch
        {
            "Message" => "bg-primary",
            "Checklist" => "bg-success",
            "Guest" => "bg-info",
            "Budget" => "bg-warning",
            "Venue" => "bg-danger",
            _ => "bg-secondary"
        };
    }
}

<style>
    /* Stats cards */
    .icon-circle {
        height: 60px;
        width: 60px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .bg-primary-light {
        background-color: rgba(255, 255, 255, 0.3);
    }

    .bg-success-light {
        background-color: rgba(255, 255, 255, 0.3);
    }

    .bg-info-light {
        background-color: rgba(255, 255, 255, 0.3);
    }

    /* Activity Timeline */
    .activity-timeline {
        max-height: 600px;
        overflow-y: auto;
        padding-right: 10px;
    }

    .activity-item {
        position: relative;
        padding-left: 30px;
        margin-bottom: 25px;
    }

    .activity-item:before {
        content: "";
        position: absolute;
        left: 15px;
        top: 30px;
        bottom: -25px;
        width: 2px;
        background-color: #dee2e6;
    }

    .activity-item:last-child:before {
        bottom: 0;
    }

    .activity-icon {
        position: absolute;
        left: 5px;
        top: 5px;
        width: 20px;
        height: 20px;
        border-radius: 50%;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 10px;
    }

    .activity-content {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 15px;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    }

    .activity-header {
        margin-bottom: 10px;
    }

    .activity-title {
        font-weight: bold;
    }

    .activity-time {
        font-size: 0.8rem;
        color: #6c757d;
    }

    .activity-body {
        display: flex;
        align-items: flex-start;
        margin-bottom: 10px;
    }

    .activity-description {
        flex: 1;
        padding-left: 10px;
    }

    /* Wedding cards (in addition to styles in _WeddingCard.cshtml) */
    .wedding-list {
        max-height: 700px;
        overflow-y: auto;
        padding-right: 10px;
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Wedding search functionality
            $("#weddingSearch").on("keyup", function() {
                var value = $(this).val().toLowerCase();
                $(".wedding-card").filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
            
            // Wedding sort functionality
            $("#weddingSort").on("change", function() {
                var value = $(this).val();
                var weddingCards = $(".wedding-card").get();
                
                weddingCards.sort(function(a, b) {
                    if (value === "date-asc") {
                        // Extract date from wedding card and compare
                        var dateA = new Date($(a).find(".wedding-date").text());
                        var dateB = new Date($(b).find(".wedding-date").text());
                        return dateA - dateB;
                    } else if (value === "date-desc") {
                        var dateA = new Date($(a).find(".wedding-date").text());
                        var dateB = new Date($(b).find(".wedding-date").text());
                        return dateB - dateA;
                    } else if (value === "status") {
                        var statusA = $(a).find(".badge").text();
                        var statusB = $(b).find(".badge").text();
                        return statusA.localeCompare(statusB);
                    } else if (value === "progress") {
                        var progressA = parseInt($(a).find(".progress-bar").attr("aria-valuenow"));
                        var progressB = parseInt($(b).find(".progress-bar").attr("aria-valuenow"));
                        return progressB - progressA; // Higher progress first
                    }
                    return 0;
                });
                
                var weddingList = $(".wedding-list");
                $.each(weddingCards, function(i, card) {
                    weddingList.append(card);
                });
            });
        });
    </script>
}