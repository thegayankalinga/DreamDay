@model DreamDay.ViewModels.Events.WeddingEventDashboardViewModel

@{
    Layout = "_Dashboard";
    ViewData["Title"] = "Wedding Events";
}

<main class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold text-primary mb-0"><i class="bi bi-heart-fill me-2"></i>My Wedding Events</h2>
        <button class="btn btn-primary rounded-pill shadow-sm" onclick="openAddEventModal()">
            <i class="bi bi-plus-circle me-2"></i>Add New Event
        </button>
    </div>

    <!-- Cards -->
    <div class="row g-4">
        @if (Model.Events != null && Model.Events.Any())
        {
            foreach (var evt in Model.Events)
            {
                var daysLeft = (evt.StartTime.Date - DateTime.Today).Days;
                var isPast = daysLeft < 0;
                var badgeColor = isPast ? "danger" : daysLeft == 0 ? "warning" : "success";
                var cardBorderClass = isPast ? "border-danger" : daysLeft == 0 ? "border-warning" : "";

                <div class="col-md-6 col-lg-4">
                    <div class="card h-100 shadow hover-shadow transition-all border-start @cardBorderClass" style="border-left-width: 5px;">
                        <div class="card-body d-flex flex-column justify-content-between">
                            <div>
                                <div class="d-flex justify-content-between">
                                    <h5 class="card-title fw-bold text-primary mb-1">@evt.Title</h5>
                                    <span class="badge bg-@badgeColor rounded-pill">
    @Html.Raw(isPast
                                            ? "<i class=\"bi bi-clock-history me-1\"></i>Past"
                                            : daysLeft == 0
                                                ? "<i class=\"bi bi-calendar-check me-1\"></i>Today!"
                                                : $"<i class=\"bi bi-calendar-date me-1\"></i>{daysLeft} days")
</span>
                                </div>

                                <div class="d-flex align-items-center text-muted my-2">
                                    <i class="bi bi-calendar-event me-2"></i>
                                    <div>
                                        <div>@evt.StartTime.ToString("dddd, MMMM d, yyyy")</div>
                                        <div>@evt.StartTime.ToString("t") - @evt.EndTime.ToString("t")</div>
                                    </div>
                                </div>

                                <div class="my-3">
                                    @if (!string.IsNullOrEmpty(evt.Venue?.Name))
                                    {
                                        <div class="d-flex align-items-center mb-2">
                                            <i class="bi bi-geo-alt-fill me-2 text-info"></i>
                                            <span>@evt.Venue.Name</span>
                                        </div>
                                    }

                                    @if (!string.IsNullOrEmpty(evt.Checklist?.Title))
                                    {
                                        <div class="d-flex align-items-center">
                                            <i class="bi bi-list-check me-2 text-secondary"></i>
                                            <span>@evt.Checklist.Title</span>
                                        </div>
                                    }
                                </div>
                            </div>

                            <a href="#" class="btn btn-outline-primary btn-sm" onclick="openEditEventModal(@evt.Id); return false;">
                                <i class="bi bi-pencil me-1"></i>Edit
                            </a>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="card border-0 shadow-sm p-4 text-center">
                    <div class="py-5">
                        <i class="bi bi-calendar-x display-1 text-muted mb-3"></i>
                        <h4>No Events Yet</h4>
                        <p class="text-muted">Start planning your special day by adding your first event.</p>
                        <button class="btn btn-primary rounded-pill mt-2" data-bs-toggle="modal" data-bs-target="#addEventModal">
                            <i class="bi bi-plus-circle me-2"></i>Add First Event
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</main>


<!-- Modal -->
<div class="modal fade" id="eventModal" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <form asp-action="CreateEvent" asp-controller="Event" method="post">
            <input type="hidden" asp-for="NewEvent.Id" id="eventId" />
            <div class="modal-content border-0 shadow">
                <div class="modal-header bg-light">
                    <h5 class="modal-title fw-bold text-primary" id="eventModalLabel">
                        <i class="bi bi-calendar-plus me-2"></i><span id="modalTitle">Add New Event</span>
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body p-4">
                    <div class="mb-4">
                        <label asp-for="NewEvent.Title" class="form-label fw-semibold">Event Title</label>
                        <input asp-for="NewEvent.Title" id="eventTitle" class="form-control form-control-lg border-0 bg-light" placeholder="Enter event title"/>
                    </div>

                    <div class="row mb-4">
                        <div class="col-md-6">
                            <label asp-for="NewEvent.StartTime" class="form-label fw-semibold">Start Time</label>
                            <div class="input-group">
                                <span class="input-group-text bg-light border-0"><i class="bi bi-clock"></i></span>
                                <input asp-for="NewEvent.StartTime" id="eventStartTime" type="datetime-local" class="form-control border-0 bg-light"/>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label asp-for="NewEvent.EndTime" class="form-label fw-semibold">End Time</label>
                            <div class="input-group">
                                <span class="input-group-text bg-light border-0"><i class="bi bi-clock-fill"></i></span>
                                <input asp-for="NewEvent.EndTime" id="eventEndTime" type="datetime-local" class="form-control border-0 bg-light"/>
                            </div>
                        </div>
                    </div>

                    <div class="mb-4">
                        <label asp-for="NewEvent.Description" class="form-label fw-semibold">Description</label>
                        <textarea asp-for="NewEvent.Description" id="eventDescription" class="form-control border-0 bg-light" rows="3" placeholder="Add details about your event"></textarea>
                    </div>

                    <div class="row mb-4">
                        <div class="col-md-6">
                            <label asp-for="NewEvent.VenueId" class="form-label fw-semibold">Venue</label>
                            <div class="input-group">
                                <span class="input-group-text bg-light border-0"><i class="bi bi-geo-alt"></i></span>
                                <select asp-for="NewEvent.VenueId" id="eventVenueId" class="form-select border-0 bg-light" asp-items="Model.AvailableVenues">
                                    <option value="">-- Select Venue --</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label asp-for="NewEvent.ChecklistId" class="form-label fw-semibold">Checklist</label>
                            <div class="input-group">
                                <span class="input-group-text bg-light border-0"><i class="bi bi-list-check"></i></span>
                                <select asp-for="NewEvent.ChecklistId" id="eventChecklistId" class="form-select border-0 bg-light" asp-items="Model.AvailableChecklists">
                                    <option value="">-- Select Checklist --</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer border-0 pt-0">
                    <button type="button" class="btn btn-outline-secondary px-4" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary px-4">
                        <i id="submitIcon" class="bi bi-plus-circle me-2"></i><span id="submitText">Create Event</span>
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<script>
    // Function to handle opening the modal for add new event
    function openAddEventModal() {
        // Reset form
        document.getElementById("eventId").value = "0";
        document.getElementById("eventTitle").value = "";
        document.getElementById("eventDescription").value = "";
        
        // Set default times (now and now + 1 hour)
        const now = new Date();
        const futureHour = new Date(now.getTime() + 60 * 60 * 1000);
        
        document.getElementById("eventStartTime").value = formatDateForInput(now);
        document.getElementById("eventEndTime").value = formatDateForInput(futureHour);
        
        // Clear selections
        document.getElementById("eventVenueId").value = "";
        document.getElementById("eventChecklistId").value = "";
        
        // Update modal title and button
        document.getElementById("modalTitle").textContent = "Add New Event";
        document.getElementById("submitText").textContent = "Create Event";
        document.getElementById("submitIcon").className = "bi bi-plus-circle me-2";
        
        // Show the modal
        const modal = new bootstrap.Modal(document.getElementById('eventModal'));
        modal.show();
    }
    
    // Function to handle opening the modal for edit event
    function openEditEventModal(id) {
        // Update modal title and button
        document.getElementById("modalTitle").textContent = "Edit Event";
        document.getElementById("submitText").textContent = "Update Event";
        document.getElementById("submitIcon").className = "bi bi-check-circle me-2";
        
        // Fetch the event data and populate the form
        fetch(`/Event/GetEventJson/${id}`)
            .then(res => res.json())
            .then(data => {
                document.getElementById("eventId").value = data.id;
                document.getElementById("eventTitle").value = data.title;
                document.getElementById("eventDescription").value = data.description;
                document.getElementById("eventStartTime").value = data.startTime;
                document.getElementById("eventEndTime").value = data.endTime;
                document.getElementById("eventVenueId").value = data.venueId || "";
                document.getElementById("eventChecklistId").value = data.checklistId || "";
                
                // Show the modal
                const modal = new bootstrap.Modal(document.getElementById('eventModal'));
                modal.show();
            })
            .catch(error => {
                console.error("Error fetching event data:", error);
                alert("Could not load event data.");
            });
    }
    
    // Helper function to format date for datetime-local input
    function formatDateForInput(date) {
        // Format date as YYYY-MM-DDThh:mm
        const year = date.getFullYear();
        const month = String(date.getMonth() + 1).padStart(2, '0');
        const day = String(date.getDate()).padStart(2, '0');
        const hours = String(date.getHours()).padStart(2, '0');
        const minutes = String(date.getMinutes()).padStart(2, '0');
        
        return `${year}-${month}-${day}T${hours}:${minutes}`;
    }
</script>