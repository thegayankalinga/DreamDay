@model List<AppUser>
@{
    ViewData["Title"] = "User Management";
}

<div class="container-fluid py-4">
    <div class="card shadow-sm border-0">
        <div class="card-header bg-gradient-primary text-white d-flex justify-content-between align-items-center">
            <h3 class="mb-0 font-weight-bold">User Management</h3>
            <button class="btn btn-sm btn-light" data-bs-toggle="modal" data-bs-target="#createUserModal">
                <i class="bi bi-plus-circle me-1"></i> Add New User
            </button>
        </div>

        <div class="card-body">
            <div class="row mb-4 align-items-center">
                <div class="col-md-6">
                    <form method="get" class="input-group">
                        <input name="searchTerm" class="form-control" placeholder="Search by name or email..." />
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-search"></i>
                        </button>
                    </form>
                </div>
                <div class="col-md-6 text-end">
                    <div class="btn-group">
                        <a href="?role=all" class="btn @(Context.Request.Query["role"] == "all" || string.IsNullOrEmpty(Context.Request.Query["role"]) ? "btn-primary" : "btn-outline-primary")">All</a>
                        <a href="?role=couple" class="btn @(Context.Request.Query["role"] == "couple" ? "btn-primary" : "btn-outline-primary")">Couples</a>
                        <a href="?role=planner" class="btn @(Context.Request.Query["role"] == "planner" ? "btn-primary" : "btn-outline-primary")">Planners</a>
                        <a href="?role=admin" class="btn @(Context.Request.Query["role"] == "admin" ? "btn-primary" : "btn-outline-primary")">Admins</a>
                    </div>
                </div>
            </div>

            <div class="table-responsive">
                <table class="table table-hover align-middle">
                    <thead class="thead-light text-uppercase small">
                    <tr>
                        <th scope="col" class="ps-3">User</th>
                        <th scope="col">Role</th>
                        <th scope="col">Status</th>
                        <th scope="col">Details</th>
                        <th scope="col" class="text-end pe-3">Actions</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var user in Model)
                    {
                        <tr class="border-top">
                            <td class="ps-3">
                                <div class="d-flex align-items-center">
                                    <div class="avatar avatar-md bg-primary rounded-circle text-white d-flex align-items-center justify-content-center me-3">
                                        <span>@(user.FirstName[0])@(user.LastName != null ? user.LastName[0].ToString() : "")</span>
                                    </div>
                                    <div>
                                        <h6 class="mb-0">@user.FirstName @user.LastName</h6>
                                        <p class="text-muted small mb-0">@user.Email</p>
                                    </div>
                                </div>
                            </td>
                            <td>
                                @{
                                    var roles = new List<string>();
                                    if (user.CoupleProfile != null) roles.Add("Couple");
                                    if (user.PlannerProfile != null) roles.Add("Planner");
                                    if (roles.Count == 0) roles.Add("Admin");

                                    foreach (var role in roles)
                                    {
                                        var badgeClass = role == "Couple" ? "bg-info" :
                                            role == "Planner" ? "bg-success" : "bg-secondary";
                                        <span class="badge @badgeClass text-white rounded-pill px-3 me-1">@role</span>
                                    }
                                }
                            </td>
                            <td>
                                @if (user.PlannerProfile != null)
                                {
                                    if (user.PlannerProfile.IsApproved)
                                    {
                                        <span class="badge bg-success text-white rounded-pill px-3">Approved</span>
                                    }
                                    else
                                    {
                                        <div class="d-flex align-items-center">
                                            <span class="badge bg-warning text-dark rounded-pill px-3 me-2">Pending</span>
                                            <form asp-action="ToggleApproval" method="post" class="d-inline">
                                                <input type="hidden" name="userId" value="@user.Id" />
                                                <button type="submit" class="btn btn-sm btn-outline-success rounded-pill">
                                                    <i class="bi bi-check-circle-fill me-1"></i> Approve
                                                </button>
                                            </form>
                                        </div>
                                    }
                                }
                            </td>
                            <td>
                                @if (user.CoupleProfile != null)
                                {
                                    <button class="btn btn-sm btn-outline-info rounded-pill" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@user.Id">
                                        <i class="bi bi-info-circle-fill me-1"></i> Details
                                    </button>
                                }
                                @if (user.PlannerProfile != null)
                                {
                                    <div class="d-flex align-items-center">
                                        <i class="bi bi-people-fill text-primary me-2"></i>
                                        <span class="fw-medium">@(user.AssignedCoupleProfiles?.Count ?? 0) Couples</span>
                                    </div>
                                }
                            </td>
                            <td class="text-end pe-3">
                                <div class="btn-group">
                                    <button class="btn btn-sm btn-outline-primary rounded-start-pill" data-bs-toggle="modal" data-bs-target="#editUserModal-@user.Id">
                                        <i class="bi bi-pencil-fill me-md-1"></i><span class="d-none d-md-inline">Edit</span>
                                    </button>
                                    <form asp-action="Delete" method="post" class="d-inline">
                                        <input type="hidden" name="id" value="@user.Id" />
                                        <button type="submit" class="btn btn-sm btn-outline-danger rounded-end-pill" onclick="return confirm('Are you sure you want to delete this user? This action will remove all associated data.');">
                                            <i class="bi bi-trash-fill me-md-1"></i><span class="d-none d-md-inline">Delete</span>
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                        @if (user.CoupleProfile != null)
                        {
                            <tr class="collapse border-0" id="collapse-@user.Id">
                                <td colspan="5" class="bg-light p-0 border-0">
                                    <div class="card card-body border-0 shadow-sm mx-3 mb-3">
                                        <div class="row g-4">
                                            <div class="col-md-4">
                                                <div class="d-flex align-items-center">
                                                    <i class="bi bi-heart-fill text-danger fs-4 me-2"></i>
                                                    <div>
                                                        <p class="text-muted small mb-0">Partner</p>
                                                        <h6 class="mb-0">@user.CoupleProfile.PartnerName</h6>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="d-flex align-items-center">
                                                    <i class="bi bi-calendar-event-fill text-primary fs-4 me-2"></i>
                                                    <div>
                                                        <p class="text-muted small mb-0">Wedding Date</p>
                                                        <h6 class="mb-0">@user.CoupleProfile.WeddingDate.ToString("MMMM d, yyyy")</h6>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="d-flex align-items-center">
                                                    <i class="bi bi-person-badge-fill text-success fs-4 me-2"></i>
                                                    <div>
                                                        <p class="text-muted small mb-0">Assigned Planner</p>
                                                        <h6 class="mb-0">
                                                            @if (user.CoupleProfile.Planner != null)
                                                            {
                                                                @user.CoupleProfile.Planner.FirstName @user.CoupleProfile.Planner.LastName
                                                            }
                                                            else
                                                            {
                                                                <span class="text-muted fst-italic">None assigned</span>
                                                            }
                                                        </h6>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    </tbody>
                </table>
            </div>

            @if (!Model.Any())
            {
                <div class="text-center py-5">
                    <i class="bi bi-search fs-1 text-muted"></i>
                    <p class="mt-3">No users found matching your criteria</p>
                </div>
            }
        </div>
    </div>
</div>

@await Html.PartialAsync("CreateUserPartialView", new DreamDay.ViewModels.RegisterViewModel
{
    EmailAddress = "",
    Password = "",
    ConfirmPassword = "",
    FirstName = "",
    Role = ""
})
@await Html.PartialAsync("EditUserPartialView", Model)

<style>
    .bg-gradient-primary {
        background: linear-gradient(135deg, #4e73df 0%, #224abe 100%);
    }

    .avatar {
        width: 40px;
        height: 40px;
    }

    .avatar-lg {
        width: 60px;
        height: 60px;
    }

    .nav-pills .nav-link {
        border-radius: 0.5rem;
        padding: 0.75rem 1rem;
        transition: all 0.2s;
    }

    .nav-pills .nav-link.active {
        background-color: #4e73df;
        box-shadow: 0 4px 6px rgba(78, 115, 223, 0.25);
        transform: translateY(-2px);
    }

    .btn-group .btn:first-child {
        border-top-left-radius: 0.5rem;
        border-bottom-left-radius: 0.5rem;
    }

    .btn-group .btn:last-child {
        border-top-right-radius: 0.5rem;
        border-bottom-right-radius: 0.5rem;
    }

    .table th {
        font-weight: 600;
        color: #5a5c69;
    }

    .form-control:focus, .form-select:focus {
        border-color: #bac8f3;
        box-shadow: 0 0 0 0.25rem rgba(78, 115, 223, 0.25);
    }

    .btn-primary {
        background-color: #4e73df;
        border-color: #4e73df;
    }

    .btn-primary:hover {
        background-color: #2e59d9;
        border-color: #2e59d9;
    }

    .btn-outline-primary {
        color: #4e73df;
        border-color: #4e73df;
    }

    .btn-outline-primary:hover {
        background-color: #4e73df;
        border-color: #4e73df;
    }

    .badge {
        font-weight: 500;
        letter-spacing: 0.3px;
    }

    .card {
        border-radius: 0.5rem;
    }

    .card-header {
        border-top-left-radius: 0.5rem !important;
        border-top-right-radius: 0.5rem !important;
    }

    .modal-content {
        border-radius: 0.5rem;
    }

    .modal-header {
        border-top-left-radius: 0.5rem;
        border-top-right-radius: 0.5rem;
    }

    .input-group-text {
        background-color: #f8f9fc;
    }

    .form-floating > .form-control:focus ~ label,
    .form-floating > .form-control:not(:placeholder-shown) ~ label {
        color: #4e73df;
    }

    .list-group-item {
        padding: 0.75rem 1.25rem;
    }

    /* Custom animation for the collapsible rows */
    .collapse {
        transition: all 0.2s ease;
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
    .avatar {
        width: 32px;
        height: 32px;
    }

    .btn-sm {
        padding: 0.25rem 0.5rem;
        font-size: 0.75rem;
    }
    }
</style>